import Head from "next/head";
import styles from "@/styles/dashboard.module.css";
import { useContext, useEffect, useState } from "react";
import { AuthContext } from "@/context/AuthContext";
import { useRouter } from "next/router";
import MenuBar from "@/components/dashboard/MenuBar";
import Charts from "@/components/dashboard/Charts";
import Cookies from "js-cookie";
import Link from "next/link";

export default function DashBoard() {
    const { isAuthenticated } = useContext(AuthContext);

    const [selectedStartDate, setSelectedStartDate] = useState(null)
    const [selectedEndDate, setSelectedEndDate] = useState(null)
    const [selectedAge, setSelectedAge] = useState(null)
    const [selectedGender, setSelectedGender] = useState(null)

    const router = useRouter();   

    console.log(router.asPath)

    
    if(!isAuthenticated){
      Cookies.set('paramsUrl', JSON.stringify(router.asPath))
    }
     
    
   
    useEffect(() => {
      const fetchFromCookies = async () => {
          try{
            console.log("use effect 1")
            const storedAge = await Cookies.get('selectedAge');
            const storedGender = await Cookies.get('selectedGender');
            const storedStartDate = await Cookies.get('selectedStartDate')
            const storedEndDate = await Cookies.get('selectedEndDate')

            if(storedAge !== null && storedAge !== undefined){
              setSelectedAge(JSON.parse(storedAge))
            }
            if(storedGender !== null  && storedGender !== undefined){
              setSelectedGender(JSON.parse(storedGender))
            }
            if(storedStartDate !== null  && storedStartDate !== undefined) {
              setSelectedStartDate(JSON.parse(storedStartDate))
            }
            if(storedStartDate !== null  && storedStartDate !== undefined) {
              setSelectedEndDate(JSON.parse(storedEndDate))
            }
          }catch(err){
            console.log(err)
          }
      }
       fetchFromCookies()
  },[])


  useEffect(() => {
     
      const setCookies = () => {
        console.log("use effect 2")

          if(selectedAge){
              Cookies.set('selectedAge', JSON.stringify(selectedAge));
          }
          if(selectedGender){
            Cookies.set('selectedGender', JSON.stringify(selectedGender));
          }
          if(selectedStartDate){
            Cookies.set('selectedStartDate', JSON.stringify(selectedStartDate));
          }
          if(selectedEndDate){
            Cookies.set('selectedEndDate', JSON.stringify(selectedEndDate));
          }

          
      }
      setCookies()
  },[selectedAge, selectedGender, selectedStartDate, selectedEndDate]);


  return (
    <>
      <Head>
        <title> Data Visualization</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={styles.main}>
        {!isAuthenticated && <div className={styles.loginMessage}>

          <h3>You need to be logged in to view this dashboard.</h3>
          <Link href='/auth/login'>Login</Link>
        </div>}
        {isAuthenticated && <div className={styles.pageContent}>
            <MenuBar 
            selectedAge = {selectedAge}
            selectedGender = {selectedGender}
            selectedStartDate = {selectedStartDate}
            selectedEndDate = {selectedEndDate}
            setSelectedAge={setSelectedAge}
            setSelectedGender={setSelectedGender}
            setSelectedStartDate={setSelectedStartDate}
            setSelectedEndDate={setSelectedEndDate}
            />
            
            <Charts 
            filterOption={{
              age : selectedAge ? selectedAge : null, 
              gender: selectedGender ? selectedGender: null,
              startDate: selectedStartDate ? selectedStartDate: null,
              endDate: selectedEndDate ? selectedEndDate: null
              }}/>
        </div> }
      </main>
    </>
  );
}
