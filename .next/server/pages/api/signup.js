"use strict";(()=>{var e={};e.id=964,e.ids=[964],e.modules={8432:e=>{e.exports=require("bcryptjs")},8013:e=>{e.exports=require("mongodb")},145:e=>{e.exports=require("next/dist/compiled/next-server/pages-api.runtime.prod.js")},6249:(e,n)=>{Object.defineProperty(n,"l",{enumerable:!0,get:function(){return function e(n,t){return t in n?n[t]:"then"in n&&"function"==typeof n.then?n.then(n=>e(n,t)):"function"==typeof n&&"default"===t?n:void 0}}})},9015:(e,n,t)=>{t.r(n),t.d(n,{config:()=>g,default:()=>f,routeModule:()=>A});var r={};t.r(r),t.d(r,{default:()=>P});var i=t(1802),a=t(7153),o=t(6249),s=t(8013),l=t(8432),u=t.n(l);let d=require("mongoose");var p=t.n(d);let c=new(p()).Schema({name:{type:String,required:!0},email:{type:String,required:!0},password:{type:String,required:!0}}),m=p().models.User||p().model("User",c);async function P(e,n){if(console.log("in signup handler"),"POST"===e.method){let t=e.body,r=await s.MongoClient.connect(process.env.MONGO_CONNECTION_URL),i=r.db("data-visualization-dashboard").collection("users");try{if(await i.findOne({email:t.email}))n.status(400).json({message:"Email already exists."});else{let e=await u().hash(t.password,12),r=new m({name:t.name,email:t.email,password:e});await i.insertOne(r),n.status(200).json({message:"User created!"})}}catch(e){console.error(e)}finally{r.close()}}}let f=(0,o.l)(r,"default"),g=(0,o.l)(r,"config"),A=new i.PagesAPIRouteModule({definition:{kind:a.x.PAGES_API,page:"/api/signup",pathname:"/api/signup",bundlePath:"",filename:""},userland:r})},7153:(e,n)=>{var t;Object.defineProperty(n,"x",{enumerable:!0,get:function(){return t}}),function(e){e.PAGES="PAGES",e.PAGES_API="PAGES_API",e.APP_PAGE="APP_PAGE",e.APP_ROUTE="APP_ROUTE"}(t||(t={}))},1802:(e,n,t)=>{e.exports=t(145)}};var n=require("../../webpack-api-runtime.js");n.C(e);var t=n(n.s=9015);module.exports=t})();